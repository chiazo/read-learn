!function(e){var n={};function t(r){if(n[r])return n[r].exports;var o=n[r]={i:r,l:!1,exports:{}};return e[r].call(o.exports,o,o.exports,t),o.l=!0,o.exports}t.m=e,t.c=n,t.d=function(e,n,r){t.o(e,n)||Object.defineProperty(e,n,{enumerable:!0,get:r})},t.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},t.t=function(e,n){if(1&n&&(e=t(e)),8&n)return e;if(4&n&&"object"==typeof e&&e&&e.__esModule)return e;var r=Object.create(null);if(t.r(r),Object.defineProperty(r,"default",{enumerable:!0,value:e}),2&n&&"string"!=typeof e)for(var o in e)t.d(r,o,function(n){return e[n]}.bind(null,o));return r},t.n=function(e){var n=e&&e.__esModule?function(){return e.default}:function(){return e};return t.d(n,"a",n),n},t.o=function(e,n){return Object.prototype.hasOwnProperty.call(e,n)},t.p="",t(t.s=0)}([function(e,n,t){"use strict";var r=!1,o=[],l=(document.createElement("input-form"),document.getElementById("submit_b")),c=document.getElementById("finish_s"),i=document.getElementById("restart_s"),a=document.getElementById("story"),u=document.getElementsByTagName("span");i.onclick=function(e){r&&window.location.reload()},l.onclick=function(e){!function(){console.log("is this working..."),console.log(a);for(var e=function(e){var n=u[e];n.addEventListener("click",function(){o[o.length]=n.innerText,n.style.backgroundColor="yellow"})},n=0;n<u.length;n++)e(n)}(),function(){r=!1;var e=a.value,n=e.split(" ",e.length-1),t=document.createElement("div");t.className+="  third";var l=document.createElement("p");l.className+=" span-par ";for(var c=document.getElementById("storyDisplay"),i=function(e){var t=document.createElement("span");t.addEventListener("click",function(){o[o.length]=t.innerText,t.style.backgroundColor="yellow"});var r="";/[!@#$%^&*()_+\-=\[\]{};':"\\|,.<>\/?]/.test(n[e].charAt(n[e].length-1))?(t.innerText=n[e].substring(0,n[e].length-1),r="<span>"+n[e].substring(0,n[e].length-1)+"</span>"+n[e].charAt(n[e].length-1)):(t.innerText=n[e]+" ",r="<span>"+n[e]+"</span>"),l.innerHTML+=r+" "},u=0;u<n.length;u++)i(u);t.appendChild(l),c.appendChild(t),document.getElementById("span-par").addEventListener("click",function(e){var n=e.target;o[o.length]=n.innerText,n.style.backgroundColor="yellow"})}()},c.onclick=function(e){var n=document.createElement("div");n.className+=" fourth";for(var t=document.getElementById("listDisplay"),l=0;l<o.length;l++){var c=document.createElement("div");c.innerText=o[l],n.appendChild(c)}t.appendChild(n),o=[],r=!0}}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,