!function(e){var t={};function n(r){if(t[r])return t[r].exports;var o=t[r]={i:r,l:!1,exports:{}};return e[r].call(o.exports,o,o.exports,n),o.l=!0,o.exports}n.m=e,n.c=t,n.d=function(e,t,r){n.o(e,t)||Object.defineProperty(e,t,{enumerable:!0,get:r})},n.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},n.t=function(e,t){if(1&t&&(e=n(e)),8&t)return e;if(4&t&&"object"==typeof e&&e&&e.__esModule)return e;var r=Object.create(null);if(n.r(r),Object.defineProperty(r,"default",{enumerable:!0,value:e}),2&t&&"string"!=typeof e)for(var o in e)n.d(r,o,function(t){return e[t]}.bind(null,o));return r},n.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return n.d(t,"a",t),t},n.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},n.p="",n(n.s=0)}([function(e,t,n){"use strict";var r=!1,o=[],l=(document.createElement("input-form"),document.getElementById("submit_b")),i=document.getElementById("finish_s"),c=document.getElementById("restart_s"),u=document.getElementById("story");c.onclick=function(e){r&&window.location.reload()},l.onclick=function(e){console.log("is this working..."),console.log(u),function(){r=!1;var e=u.value,t=e.split(" ",e.length-1),n=document.createElement("div");n.className+="  third";for(var l=document.createElement("p"),i=!1,c=document.getElementById("storyDisplay"),d=function(e){var n=document.createElement("span"),r=t[e].charAt(t[e].length-1);/^[,\.!;:]/.test(r)?(n.innerText=t[e].substring(0,t[e].length-1),i=!0):n.innerText=t[e]+" ",l.appendChild(n),i&&(l.innerText+=t[e].charAt(t[e].length-1)+" ",i=!1),n.addEventListener("click",function(){o[o.length]=n.innerText,n.style.backgroundColor="yellow"})},a=0;a<t.length;a++)d(a);n.appendChild(l),c.appendChild(n)}()},i.onclick=function(e){var t=document.createElement("div");t.className+=" fourth";for(var n=document.getElementById("listDisplay"),l=0;l<o.length;l++){var i=document.createElement("div");i.innerText=o[l],t.appendChild(i)}n.appendChild(t),o=[],r=!0}}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,