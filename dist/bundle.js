!function(e){var t={};function n(o){if(t[o])return t[o].exports;var r=t[o]={i:o,l:!1,exports:{}};return e[o].call(r.exports,r,r.exports,n),r.l=!0,r.exports}n.m=e,n.c=t,n.d=function(e,t,o){n.o(e,t)||Object.defineProperty(e,t,{enumerable:!0,get:o})},n.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},n.t=function(e,t){if(1&t&&(e=n(e)),8&t)return e;if(4&t&&"object"==typeof e&&e&&e.__esModule)return e;var o=Object.create(null);if(n.r(o),Object.defineProperty(o,"default",{enumerable:!0,value:e}),2&t&&"string"!=typeof e)for(var r in e)n.d(o,r,function(t){return e[t]}.bind(null,r));return o},n.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return n.d(t,"a",t),t},n.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},n.p="",n(n.s=0)}([function(e,t,n){"use strict";var o=!1,r=[],l=(document.createElement("input-form"),document.getElementById("submit_b")),i=document.getElementById("finish_s"),c=document.getElementById("restart_s"),u=document.getElementById("story");c.onclick=function(e){o&&window.location.reload()},l.onclick=function(e){console.log("is this working..."),console.log(u),function(){o=!1;var e=u.value,t=e.split(" ",e.length-1),n=document.createElement("div");n.className+="  third";for(var l=document.createElement("p"),i=document.getElementById("storyDisplay"),c=function(e){var n=document.createElement("span");n.innerText=t[e]+" ",n.addEventListener("click",function(){r[r.length]=n.innerText,n.style.backgroundColor="yellow"}),l.appendChild(n)},d=0;d<t.length;d++)c(d);n.appendChild(l),i.appendChild(n)}()},i.onclick=function(e){var t=document.createElement("div");t.className+=" fourth";for(var n=document.getElementById("listDisplay"),l=0;l<r.length;l++){var i=document.createElement("div");i.innerText=r[l],t.appendChild(i)}n.appendChild(t),r=[],o=!0}}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,